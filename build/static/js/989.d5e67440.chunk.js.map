{"version":3,"file":"static/js/989.d5e67440.chunk.js","mappings":"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","sources":["WebComponents/Auths/ResetPassword.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { UserResetPass } from \"../../apiServices/UserHttpService/UserLoginHttpService\";\n\nfunction ResetPassword() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    watch,\n  } = useForm({ mode: \"onChange\" });\n\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\n  const [loader, setLoader] = useState(false);\n  const navigate = useNavigate();\n  let location = useLocation();\n\n  const password = watch(\"password\");\n  const confirmPassword = watch(\"confirmPassword\");\n\n  useEffect(() => {\n    if (password && password.length < 6) {\n      setPasswordError(\"Password must be at least 6 characters\");\n    } else {\n      setPasswordError(\"\");\n    }\n\n    if (confirmPassword && confirmPassword !== password) {\n      setConfirmPasswordError(\"Passwords do not match\");\n    } else {\n      setConfirmPasswordError(\"\");\n    }\n  }, [password, confirmPassword]);\n\n  const onSubmit = async (info) => {\n    setLoader(true);\n\n    setTimeout(() => {\n      setLoader(false);\n    }, 4000);\n\n    try {\n      let formData = {\n        password: info?.password,\n        email: location?.state?.email,\n      };\n\n      const { data, error } = await UserResetPass(formData);\n\n      if (!error) {\n        if (!data.error) {\n          setLoader(false);\n          navigate(\"/login\");\n        } else {\n          setLoader(false);\n        }\n      }\n    } catch (err) {\n      setLoader(false);\n    }\n  };\n\n  return (\n    <div className=\"centerd-body bg-light\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xl-8 col-lg-8 col-md-8 col-11 mx-auto\">\n            <div className=\"signup\">\n              <div className=\"row\">\n                {/* Left Side */}\n                <div className=\"col-md-6 px-0\">\n                  <div className=\"right-side bg-main\">\n                    <h1 className=\"text-white signup-heading\">Welcome</h1>\n                    <div className=\"login-img\">\n                      <img src=\"res/assets/img/login-img.png\" alt=\"\" />\n                    </div>\n                  </div>\n                </div>\n\n                {/* Right Side (Form) */}\n                <div className=\"col-md-6 px-0 bg-white\">\n                  <div className=\"left-side\">\n                    <h1 className=\"signup-heading fw-bold text-main\">\n                      Vexors<span className=\"fw-light text-dark\">Admin</span>\n                    </h1>\n                    <div className=\"form-design\">\n                      <form onSubmit={handleSubmit(onSubmit)}>\n                        {/* New Password Field */}\n                        <div className=\"form-group position-relative\">\n                          <label htmlFor=\"password\" className=\"form-label\">\n                            * New Password\n                          </label>\n                          <input\n                            type=\"password\"\n                            className={`form-control ${\n                              passwordError || errors.password\n                                ? \"error-boundary animate__animated animate__headShake\"\n                                : \"\"\n                            }`}\n                            placeholder=\"Enter new password\"\n                            {...register(\"password\", {\n                              required: \"Password is required!\",\n                              minLength: {\n                                value: 6,\n                                message:\n                                  \"Password must be at least 6 characters\",\n                              },\n                            })}\n                          />\n                          {password && !passwordError && (\n                            <i className=\"fa fa-check-circle text-success success-icon\"></i>\n                          )}\n                          {passwordError && (\n                            <p className=\"text-danger animate__animated animate__headShake small-text\">\n                              *{passwordError}\n                            </p>\n                          )}\n                        </div>\n\n                        {/* Confirm Password Field */}\n                        <div className=\"form-group position-relative\">\n                          <label\n                            htmlFor=\"confirmPassword\"\n                            className=\"form-label\"\n                          >\n                            * Confirm Password\n                          </label>\n                          <input\n                            type=\"password\"\n                            className={`form-control ${\n                              confirmPasswordError || errors.confirmPassword\n                                ? \"error-boundary animate__animated animate__headShake\"\n                                : \"\"\n                            }`}\n                            placeholder=\"Confirm your password\"\n                            {...register(\"confirmPassword\", {\n                              required: \"Confirm Password is required!\",\n                              validate: (value) =>\n                                value === password || \"Passwords do not match\",\n                            })}\n                          />\n                          {confirmPassword && !confirmPasswordError && (\n                            <i className=\"fa fa-check-circle text-success success-icon\"></i>\n                          )}\n                          {confirmPasswordError && (\n                            <p className=\"text-danger animate__animated animate__headShake small-text\">\n                              *{confirmPasswordError}\n                            </p>\n                          )}\n                        </div>\n\n                        <div className=\"form-group mt-4\">\n                          <button\n                            type=\"submit\"\n                            className=\"comman-btn\"\n                            disabled={loader}\n                          >\n                            {loader ? (\n                              <span>\n                                <i className=\"fa fa-spinner fa-spin\"></i>{\" \"}\n                                Resetting...\n                              </span>\n                            ) : (\n                              \"Reset Password\"\n                            )}\n                          </button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n                {/* Right Side Ends */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ResetPassword;\n"],"names":["register","handleSubmit","formState","errors","watch","useForm","mode","passwordError","setPasswordError","useState","confirmPasswordError","setConfirmPasswordError","loader","setLoader","navigate","useNavigate","location","useLocation","password","confirmPassword","useEffect","length","_jsx","className","children","_jsxs","src","alt","onSubmit","async","setTimeout","_location$state","formData","info","email","state","data","error","UserResetPass","err","htmlFor","_objectSpread","type","concat","placeholder","required","minLength","value","message","validate","disabled"],"sourceRoot":""}