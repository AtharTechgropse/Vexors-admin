{"version":3,"file":"static/js/356.aa75a732.chunk.js","mappings":"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","sources":["WebComponents/Auths/Login.jsx","apiServices/UserHttpService/UserLoginHttpService.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { UserLogin } from \"../../apiServices/UserHttpService/UserLoginHttpService\";\n\nfunction Login() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    watch,\n  } = useForm();\n  const [loader, setLoader] = useState(false);\n  const navigate = useNavigate();\n\n  let userToken = localStorage?.getItem(\"token-vexors-admin\");\n\n  const onSubmit = async (info) => {\n    setLoader(true);\n\n    setTimeout(() => {\n      setLoader(false);\n    }, [4000]);\n\n    try {\n      let formData = {\n        email: info?.email,\n        password: info?.password,\n      };\n\n      const { data, error } = await UserLogin(formData);\n\n      if (!error) {\n        if (!data.error) {\n          setLoader(false);\n          navigate(\"/\", { state: { from: \"login\" } });\n        } else {\n          setLoader(false);\n        }\n      }\n    } catch (err) {\n      setLoader(false);\n    }\n  };\n\n  // useEffect(() => {\n  //   if (userToken?.length > 4) {\n  //     navigate(\"/\");\n  //   }\n  // }, [userToken]);\n\n  const email = watch(\"email\");\n  const password = watch(\"password\");\n\n  function togglePassword() {\n    var x = document.getElementById(\"password-input\");\n    if (x.type === \"password\") {\n      x.type = \"text\";\n    } else {\n      x.type = \"password\";\n    }\n  }\n\n  return (\n    <div className=\"centerd-body bg-light\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xl-8 col-lg-8 col-md-8 col-11 mx-auto\">\n            <div className=\"signup\">\n              <div className=\"row\">\n                {/* Left Side */}\n                <div className=\"col-md-6 px-0\">\n                  <div className=\"right-side bg-main\">\n                    <h1 className=\"text-white signup-heading\">Welcome</h1>\n                    <div className=\"login-img\">\n                      <img src=\"res/assets/img/login-img.png\" alt=\"\" />\n                    </div>\n                  </div>\n                </div>\n\n                {/* Right Side (Form) */}\n                <div className=\"col-md-6 px-0 bg-white\">\n                  <div className=\"left-side\">\n                    <h1 className=\"signup-heading fw-bold text-main\">\n                      Vexors<span className=\"fw-light text-dark\">Admin</span>\n                    </h1>\n                    <div className=\"form-design\">\n                      <div class=\"bg-main-light box-info\">\n                        <div class=\"d-flex gap-3 align-items-center\">\n                          <span class=\"circle-info\">\n                            <i class=\"fa fa-info-circle text-main\"></i>\n                          </span>\n                          <div>\n                            <p class=\"m-0 comman-sm-text\">\n                              Email: example@vexors.co\n                            </p>\n                            <p class=\"m-0 comman-sm-text\">Password: password</p>\n                          </div>\n                        </div>\n                      </div>\n\n                      <form onSubmit={handleSubmit(onSubmit)}>\n                        {/* Email Field */}\n                        <div className=\"form-group position-relative\">\n                          <label htmlFor=\"email\" className=\"form-label\">\n                            * Email\n                          </label>\n                          <input\n                            type=\"text\"\n                            className={`form-control ${\n                              errors.email\n                                ? \"error-boundary animate__animated animate__headShake\"\n                                : \"\"\n                            }`}\n                            placeholder=\"example@vexors.co\"\n                            {...register(\"email\", {\n                              required: \"Email is required!\",\n                              pattern: {\n                                value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n                                message: \"Invalid email format\",\n                              },\n                            })}\n                          />\n                          {/* Green Check Icon for Valid Input */}\n                          {email && !errors.email && (\n                            <i className=\"fa fa-check-circle text-success success-icon\"></i>\n                          )}\n                          {errors.email && (\n                            <p className=\"text-danger animate__animated animate__headShake small-text\">\n                              *{errors.email.message}\n                            </p>\n                          )}\n                        </div>\n\n                        {/* Password Field */}\n                        <div className=\"form-group position-relative\">\n                          <label htmlFor=\"password\" className=\"form-label\">\n                            * Password\n                          </label>\n                          <input\n                            type=\"password\"\n                            id=\"password-input\"\n                            className={`form-control ${\n                              errors.password\n                                ? \"error-boundary animate__animated animate__headShake\"\n                                : \"\"\n                            }`}\n                            placeholder=\"******\"\n                            {...register(\"password\", {\n                              required: \"Password is required!\",\n                              minLength: {\n                                value: 6,\n                                message:\n                                  \"Password must be at least 6 characters\",\n                              },\n                            })}\n                          />\n                          {/* Green Check Icon for Valid Input */}\n                          {password && !errors.password && (\n                            <i className=\"fa fa-check-circle text-success success-icon\"></i>\n                          )}\n                          {errors.password && (\n                            <p className=\"text-danger animate__animated animate__headShake small-text\">\n                              *{errors.password.message}\n                            </p>\n                          )}\n                        </div>\n                        <div className=\"mt-2 mb-1 text-center\">\n                          <input\n                            style={{\n                              width: \"14px\",\n                              height: \"14px\",\n                              marginRight: \"4px\",\n                              position: \"relative\",\n                              top: \"2px\",\n                            }}\n                            type=\"checkbox\"\n                            onClick={togglePassword}\n                            className=\"showPassCheck\"\n                          />\n                          <small className=\"showPass\">Show Password</small>\n                        </div>\n\n                        <Link\n                          to=\"/forgot-password\"\n                          className=\"text-main comman-sm-text text-decoration-none\"\n                        >\n                          Forgot Password?\n                        </Link>\n\n                        <div className=\"form-group mt-2\">\n                          <button\n                            type=\"submit\"\n                            className=\"comman-btn\"\n                            disabled={loader}\n                          >\n                            {loader ? (\n                              <span>\n                                <i className=\"fa fa-spinner fa-spin\"></i>{\" \"}\n                                Logging in...\n                              </span>\n                            ) : (\n                              \"Login\"\n                            )}\n                          </button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n                {/* Right Side Ends */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n\n","import httpService from \"../httpService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction handleError(error, customMessage = \"An unexpected error occurred\") {\r\n  if (error.response) {\r\n    // Server responded with a status code other than 2xx\r\n    const { message } = error.response.data;\r\n    toast.error(message || customMessage, { autoClose: 1500 });\r\n    console.error(\"API Error:\", message || error.response);\r\n  } else if (error.request) {\r\n    // Request was made but no response received\r\n    toast.error(\"No response from server. Please try again later.\", {\r\n      autoClose: 1500,\r\n    });\r\n    console.error(\"No response received:\", error.request);\r\n  } else {\r\n    // Something happened while setting up the request\r\n    toast.error(customMessage, { autoClose: 1500 });\r\n    console.error(\"Error:\", error.message);\r\n  }\r\n}\r\n\r\nexport async function UserLogin(formData) {\r\n  try {\r\n    const { data } = await httpService.put(\r\n      `${process.env.REACT_APP_APIENDPOINT}auth/adminLogin`,\r\n      formData\r\n    );\r\n    if (!data.error) {\r\n      localStorage.removeItem(\"token-vexors-admin\");\r\n      localStorage.setItem(\"token-vexors-admin\", data?.results?.token);\r\n      localStorage.setItem(\"vexors-admin\", data?.results?.admin?._id);\r\n      toast.success(data.message, { autoClose: 1500 });\r\n    } else {\r\n      toast.error(data.message);\r\n    }\r\n    return { data };\r\n  } catch (error) {\r\n    handleError(error, \"Failed to log in\");\r\n    return { error };\r\n  }\r\n}\r\n\r\nexport async function UserSignUp(formData) {\r\n  try {\r\n    const { data } = await httpService.post(\r\n      `${process.env.REACT_APP_APIENDPOINT}api/signup`,\r\n      formData\r\n    );\r\n\r\n    if (!data.error) {\r\n      toast.success(data.message, { autoClose: 1500 });\r\n    } else {\r\n      toast.error(data.message);\r\n    }\r\n\r\n    return { data };\r\n  } catch (error) {\r\n    handleError(error, \"Failed to log in\");\r\n    return { error };\r\n  }\r\n}\r\n\r\nexport async function UserforgotPassword(formData) {\r\n  try {\r\n    const { data } = await httpService.put(\r\n      `${process.env.REACT_APP_APIENDPOINT}auth/adminForgetPassword`,\r\n      formData\r\n    );\r\n    if (!data.error) {\r\n      toast.success(data.message, { autoClose: 1500 });\r\n    } else {\r\n      toast.error(data.message, { autoClose: 1500 });\r\n    }\r\n    return { data };\r\n  } catch (error) {\r\n    handleError(error, \"Failed to process forgot password request\");\r\n    return { error };\r\n  }\r\n}\r\n\r\nexport async function verifyOTP(formData) {\r\n  try {\r\n    const { data } = await httpService.put(\r\n      `${process.env.REACT_APP_APIENDPOINT}auth/adminVerifyOtp`,\r\n      formData\r\n    );\r\n    if (!data.error) {\r\n      toast.success(data.message);\r\n    } else {\r\n      toast.error(data.message, { autoClose: 1500 });\r\n    }\r\n\r\n    return { data };\r\n  } catch (error) {\r\n    handleError(error, \"Failed to verify OTP\");\r\n    return { error };\r\n  }\r\n}\r\n\r\nexport async function UserResetPass(formData) {\r\n  try {\r\n    const { data } = await httpService.put(\r\n      `${process.env.REACT_APP_APIENDPOINT}auth/resetPasswordAdmin`,\r\n      formData\r\n    );\r\n    if (!data.error) {\r\n      toast.success(data.message);\r\n    } else {\r\n      toast.error(data.message, { autoClose: 1500 });\r\n    }\r\n\r\n    return { data };\r\n  } catch (error) {\r\n    handleError(error, \"Failed to update password\");\r\n    return { error };\r\n  }\r\n}\r\n\r\nexport async function changePasswordpart(formData) {\r\n  try {\r\n    const { data } = await httpService.patch(\r\n      `${process.env.REACT_APP_APIENDPOINT}api/partner/changePassword`,\r\n      formData\r\n    );\r\n    console.log(data);\r\n\r\n    if (!data.error) {\r\n      toast.success(data.message);\r\n    } else {\r\n      toast.error(data.message, { autoClose: 1500 });\r\n    }\r\n\r\n    return { data };\r\n  } catch (error) {\r\n    handleError(error, \"Failed to change password\");\r\n    return { error };\r\n  }\r\n}\r\n"],"names":["_localStorage","register","handleSubmit","formState","errors","watch","useForm","loader","setLoader","useState","navigate","useNavigate","localStorage","getItem","email","password","_jsx","className","children","_jsxs","src","alt","class","onSubmit","async","setTimeout","formData","info","data","error","UserLogin","state","from","err","htmlFor","_objectSpread","type","concat","placeholder","required","pattern","value","message","id","minLength","style","width","height","marginRight","position","top","onClick","x","document","getElementById","Link","to","disabled","handleError","customMessage","arguments","length","undefined","response","toast","autoClose","console","request","httpService","put","process","_data$results","_data$results2","_data$results2$admin","removeItem","setItem","results","token","admin","_id","success","UserSignUp","post","UserforgotPassword","verifyOTP","UserResetPass"],"sourceRoot":""}